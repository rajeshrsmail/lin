
 
 ------------------------
 MPM-Specific Directives
--------------------------

StartServers             =    The number of Apache server process to be started.  

                                    for Prefork MPM, it is 8
                                    
                                     However, note that many number of process will be started based on the number of requests that is being made from the client side.
                                     
                                     
 MaxSpareServers      =  This limits the maximum number of server process that could be running at any point of time. ( default is 20 )
 MinSpareServers       =  This value maintains things in such a way minimum 5 server processes would be running at any point of time  where default is 5

MaxClients                =   Limits number of concurrent client requests at any point of time by default  to 150.  Maximum could be  256.
MaxRequestsPerChild   =  Limits the total number of requests a child server process could serve in its lifetime , if it reaches this value it should die , default 4000 for prefork.


LogFormat                 -  By default you will see the following log formats in /etc/httpd/conf/httpd.conf

                                   Combined
                                   Common
                                   Referer
                                   Agent
                                   
                                   
                                   The above four are nicknames provided to certain Log formats.
                                   We can choose which one we want by means of the following way:
                                   
                                    CustomLog /var/log/httpd/mysite_access.log combined
                                    or
                                    CustomLog /var/log/httpd/mysite_access.log Common
                                    
                                   
                                   Or else, we can provide our own Custom nicknames as follows, for eg:
                                   
                                   LogFormat "%h %t %>s" rajeshrs

The most important thing that should be noted in /etc/httpd/conf/httpd.conf is:

<Directory />
Options -FollowSymLinks


AllowOverride None
Order allow,deny
Deny from all
</Directory>
 ====================
 What is apachectl command
 =====================
 
 Apachectl is a wrapper script.
 
 apachectl configtest = httpd -t
 
 apachectl start
Apache Topics:

(1)  Apache main configuration file and its sections.
(2)  

1) What does HTTP do ?

HTTP is a protocol that is used to transmit, format and link documents which contain variety of media types including text, pictures, sound, animation, and video.  
Note:  HTTP is a TCP-based protocol.

2) What is a web server?

Web server is a computer that answers HTTP requests.  

3) What is HTTPS?

HTTPS is a protocol which does that same things as HTTP does, but also has an additional feature:  Transmission of data securely.  This HTTPS protocol need to be taken care by a daemon which can understand SSL protocol and listens for requests on TCP port 443.



=================================================================
                   HTACCESS
=================================================================

1) SuperLink on htaccess:  http://wiki.apache.org/httpd/Htaccess
2) Superlink2 on htaccess:  http://www.htaccess-guide.com


(a) Provide details about .htaccess file:



5) What is .htaccess file?

 The purpose of .htaccess file is to provide a means to configure Apache for users who cannot modify the main configuration file.  This file will be used in environments such as shared hosting environments, in which users would be given access only to their home directories ( maybe additionally some apache DocumentRoot directories).
 
 .htaccess is a configuration file for use on web servers running the Apache Web Server software. When a .htaccess file is placed in a directory which is in turn 'loaded via the Apache Web Server', then the .htaccess file is detected and executed by the Apache Web Server software. These .htaccess files can be used to alter the configuration of the Apache Web Server software to enable/disable additional functionality and features that the Apache Web Server software has to offer. These facilities include basic redirect functionality, for instance if a 404 file not found error occurs, or for more advanced functions such as content password protection or image hot link prevention.
 
 
6) How to change the name of the .htaccess to say .htconfig
 
 Provide the following in /etc/httpd/conf/httpd.conf
 AccessFileName .htconfig
 
 7) How can we specify in httpd.conf that .htaccess file needs to be considered?
 
 vim /etc/httpd/conf/httpd.conf
 AllowOverride Authconfig
 
 
 Note:  By default AllowOverride would be as follows:
 
 AllowOverride None.  We need to change this to AllowOverride Authconfig
 
 8) What do you know about the directive "AllowOverride" ?
 
 a) AllowOverride directive specifies what are all the directives that could be used within a .htaccess file.
 
 b) Note: AllowOverride directive could be used only inside the Directory container.  It cannot be used with Location or other containers.
 
 b) There are several options we can use with AllowOverrride:
 
       -Allowoverride None
       -AllowOverride Options
       -AllowOverride Indexes
       -AllowOverride Limit
       -AllowOverride AuthConfig
       -AllowOverride All
       
 AllowOverride None  -  When this option is used, then .htaccess files are completely ignored.
 AllowOverride Options - See http://httpd.apache.org/docs/2.2/mod/core.html
 AlllowOverride Indexes - See http://httpd.apache.org/docs/2.2/mod/core.html
 AllowOverride Limit - http://httpd.apache.org/docs/2.2/mod/core.html
 AllowOverride AuthConfig - If a .htaccess file is present, then read it and also include only the directives related to authorization such as  (AuthDBMGroupFile, AuthDBMUserFile,  
 AuthGroupFile, AuthName, AuthType, AuthUserFile, Require, etc.) 
 AllowOverride All - If a .htaccess file is present in a directory and its subdirectories, then read them.  Also, include all the options such as Options, Indexes, Limit, AuthConfig, etc.
 
 
 
 8) Important Notes/findings about .htaccess:
 
 
 a) AllowOverride directive could be used in a virtual host file only through the Directory block.  For eg:
 
    <Directory /some/dir>
		  AllowOverride AuthConfig
			</Directory>
 
 
 9) How to set up an Error Document in .htaccess file?
 
 
 vim /public/html/mysite/.htaccesss
 
 AuthName "somename"
 AuthType Basic
 AuthUserFile .htpasswd
 Require valid-user
 ErrorDocument 404 /404.html    ( note the slash before 404.html is a must, else it would not provide you the desired results. )
 
 
 =================================
 Order deny, allow and
 Order allow,deny
 =================================
 
 Mainly referenced the following link:  http://www.maxi-pedia.com/Order+allow+deny
 
Example: Allow from 10.1.2.3
Example: Allow from 10.1
Example:  Deny from 10.0.0.0
Example:  Deny from 10.1


Order allow, deny means :

( my definition ) :  First read (evaluate, but not execute ) all the computers/networks/domains  mentioned in the "allow from" directives.  Then after reading ( just reading and evaluating, not executing ) all these then Read all the computers/networks/domains mentioned in the "deny from" directives.

Eg.  < Directory /var/www/html/mysite/images>

         Order allow,deny
         Allow from 10.0.0.1
         Allow from 192.168.1.23
         Allow from ram.com
         deny from all
         
         </Directory>
         
         

let's take a look at how Order allow,deny works.

<Directory "/www">
Order Allow,Deny
Deny from all
Allow from all
</Directory>

In this case, your client would be denied access. Why? Because Apache first evaluates the Allow directive rules and then the Deny directive rules, so Allow from all would be executed first and then the Deny from all would take place.

Now the same example with the Order allow,deny swapped.

<Directory "/www">
Order Deny,Allow
Deny from all
Allow from all
</Directory>

The configuration above would result in your client being allowed access because the Deny from all rule would be processed first and the Allow from all rule would be processed  second. Now, let's get more specific. The following example could be used for specialized and restricted servers, for example some kind of intranet site.

<Directory "/www">
Order Deny,Allow
Deny from all
Allow from example.com
</Directory>

This is a bit expanded application of the Order directive. This configuration would restrict everyone from accessing the /www directory but hosts in the example.com domain. Abc.example.com would be allowed access, www.myexample.com would be restricted. Now, let's say you want to do the opposite. You want to restrict someone from some specific domain (perhaps someone who is attacking your web site) and allow everyone else.

<Directory "/www">
Order Allow,Deny
Allow from all
Deny from www.myexample.com
</Directory>

The configuration provided above would give access to everyone and restrict all hosts from the www.myexample.com domain.

Now, what happens if you forget to provide specific rules and use just the Order allow,deny directive alone?

<Directory /www>
  Order Allow,Deny
</Directory>

The presence of an Order directive can affect access to a part of the server even in the absence of accompanying Allow and Deny directives. That is because when you specify the Order allow,deny you also control the default access state. The example above will Deny all access to the /www directory because the default access state is set to Deny. ( Deny from All ).
 
 
 Order allow,deny tells your web server that the Allow rules are processed before the Deny rules.
 
 Order deny, allow means that the deny rules are processed before the allow rules
 
 
 
 
 
 10) Redirect:
 
Redirect /old_dir/ http://www.yourdomain.com/new_dir/index.html


11) What is DSO ?

Dynamically Shared Objects.

Apache is a modular program.  It supports static modules which would be present by default when Apache is built.  Apart from that dynamically loadable modules would be present.  Compulsorily, there would be some static modules, such as the core ( which contains the basic features/functionalities of Apache).  If the administrator wants to add some functionality, he can do so by using the Apache Extension tool, apxs.  These dynamically loadable modules are called DSO.

Apache is a modular program where the administrator can choose the functionality to include in the server by selecting a set of modules.   The modules could be statically compiled at the time the server is built.  Alternatively, modules could be compiled as DSO modules that exist separately from the main httpd binary file. DSO modules may be compiled at the time the server is built, or they may be compiled and added at a later time using the Apache Extension Tool (apxs).



12) What is meant by MPM modules in Apache?

( Link :  http://httpd.apache.org/docs/2.2/mpm.html ) 

1) MPM - Multi Processing Modules
MPM module is the most important module of Apache.  MPM module is like a manager for Apache whose responsibilities are :

   (a) Binding to Network ports.
   (b) Accepting Requests
   (c) Dispatching child processes to handle the requests, generate child processes according to the load of the server.
   
   The MPM that are famous are:
   
   1) prefork
   2) mpm worker
   3) event
   4) 
   
   
   Worker MPM :
   
   1) If scalability is your concern, then choose this.
   2) Thread-based MPM.
   3) The worker MPM turns Apache into a multiprocess, multi-threaded web server
   4)  Worker can handle more requests with less resources than prefork.
   Multiprocess means -> The number of child servers started.
   Multithread means ->  The number of connections made by child processes.
   5) The Apache worker MPM started with Apache version 2.0
   
   Prefork MPM:
   
   1) Non-Threaded, Preforked web server functionality could be achieved through the prefork MPM.
   2) If functions similar to the one which provides Apache 1.3 ( so compatible with older systems ) 
   
   
   
   At any time, only one MPM can exist.  As of apache 2.4.2 ( July 2012), the latest, the default MPM to be the 'event' MPM module.
   
   Depending on the functionality of your webserver, we can choose which MPM module is suitable.  Depending on the nature of your sites, your users, your primary focus, we can choose accordingly.
   
   
   For eg, if scalability is what your primary concern, then go for MPM module or event module.
             if stability and compatibility is your concern, then go for perfork or itk module.
2) Depending on the functionality of your webserver, we can choose which MPM module is suitable 


 A==================
 
 
 (1)Web server - provides web pages ( such as html, video, and images ) on request by web clients ( typically a web browser)
 (2) Apache, Nginx, lighttpd, google web server, IIS, etc.
 (3) Apache is the most famous with over 55% market share.
 (4) Apache version is now 2.4.x with RHEL giving still 2.2.xxx
 (5) In RHEL, Apache's base directory ( this is where Apache "lives" ) is /etc/httpd directory.
     In Apache's terms this directory is the "ServerRoot"
     - All configuration directories and files would be inside this directory.
     
        eg. /etc/httpd/conf
              /etc/httpd/conf.d
              /etc/httpd/logs
              /etc/httpd/ssl
              
 (6) To find out what is the version of Apache you are using :
 
     httpd -v or apache2ctl -v in ubuntu or apachectl -v if source-built.
     
(7) To find out what MPM your Apache uses:

    httpd -V | grep MPM  | 
    
    ( its capital V ).
    
 (8) To find out what are the modules that are being loaded:
 
     httpd -M
     
  (9) To find out what are the static modules :
  
     httpd -l
     or
     httpd -M | grep static
     
  (10) To find out what are the dynamic ( shared) modules:
  
     httpd -M | grep shared
     
  (11) 
 
 
 
 
 
 ==================
 Apache FAQs
 ==================
 
 Q1) What are the Apache modules you are aware of?
 
 1) mod_ssl
 2) mod_rewrite
 3) mod_alias
 4) mod_access
 5) mod_proxy
 6) mod_expires
 7) mod_autoindex
 8) 
 
 
Q2:  What is an HTTP method?

One of the most important fields in a request is METHOD.  This tells the server how to handle the incoming data.

1) GET
2) HEAD
3) POST
4) PUT -  Tells web server to store the data.
5)DELETE - Tells the server to delete the data.
6)TRACE - Tells the server to return a diagnostic trace of the actions it takes.
7) CONNECT - 

Q3:  What is the difference between a thread and a process?

Link:  http://periwinkle.99k.org/thread-vs-process.php

1) When you click MSWord icon, then a process is started for that particular task.
2) You start editing the MSWord file and now you give print option to print it.  The word program gives print option to print it.  The word program now starts a thread that will do printing job.  At the same time, it allows your editing too.
3) Process is an execution instance of a program.  Thread is a "sub process" started by the main process.  Process is "heavy weight", thread is "lightweight".
4) Each process needs memory to be allocated separately.
But a thread will use the same address space of its parent process ( uses the same storage allocated for its parent process).
5) MPM - Worker is a thread-based module.  It has multithreading and multiprocessing capabilities.
6) Prefork - Prefork module is a process-based module, multiprocessing only !!
7) Threads are easier to create than processes because they do not require a separate address space.
8) Processes are independant of each other.  Threads, since they share the same address space, are interdependant.

Q4:  How to check Apache via Telnet?

telnet rajeshrs.org

Trying 10.11.12.13
Connected to rajeshrs.org
Escape character is '^']

GET /index.html HTTP/1.1  enter key
host:  rajeshrs.org enterkey
enterkey
Now, the page content would be displayed as text.

or

telnet railsfactory.com
HEAD / HTTP/1.1

Response:  HTTP/1.1 200 ok
Server:  Apache /blahblah  (Debian)


Another method, but not encouraged:

nmap -sV -P0 -p80 google.com

Output - >  OS - linux
server:  Google httpd 2.0 (GFE) 

Another method

wget -s theamp.com



How to hide Apache Server Software Version?

ServerTokens Prodonly
ServerSignature Off

( www.ducea.com and search for Apache tips and tricks) 



===================
Apache Interview Questions
======================

1) What is the log file location of Apache?
a) /var/log/httpd ( centos)
b) /var/log/apache2 ( Debian)

2) What are the types of virtual hosts?

a) Name-based Virtual Hosting -> Single IP Address , many web sites.  We need to enable it by the Directive NamebasedVirtualHosting *:80
b) IP-Based Virtual Hosting -> Each site needs to have its own network adapter with a unique IP address of its own.

3) How to restart Apache Web server?

service httpd restart

4) How do you check the version of Apache?

rpm -qa | grep httpd
httpd -v

5) What is the meaning of Listen directive in httpd.conf file?

Port number on which Apache needs to listen to for incoming requests.

6) what is DocumentRoot?

The directory which contains the html and other files accessible via web browser by the public.

By default, the Apache server in RHEL is configured to serve files from /var/www/html directory.

7) On which port the Apache server works?

http - 80
https- 443

8) Main configuration file for Apache?

/etc/httpd/conf/httpd.conf

9) What is the latest version of Apache?

2.4.x

10) What is the difference between Location and Diirective directives?

Location is a directive related to the URL a user is typing in the web browser.
Directory is a directive related to the path of the directory in the filesystem.

11) Difference between a restart and a graceful restart of a web server?

During a normal restart, the server is stopped and then started, causing some requests to be lost.

Graceful restart allows Apache children to continue to serve their current requests until they can be replaced with children running the new configuration.

12) If you have added "LogLevel debug", in httpd.conf, the what will happen?

It will give you more information in the error log inorder to debug a problem.

13) Can you record the MAC address of clients that access your server?

No.

14) Can you record all the cookies sent to your server by clients in webserver logs?

Yes.


15) What can we do to find out how people are reaching your site?

Add the followwing to your activity log format:

%{Referer}
s
 
 
 